{"version":3,"sources":["Controllers.js"],"names":["regModel","require","courseModel","registerController","req","res","body","username","email","password","role","create","json","message","error","loginController","_req$body2","userExist","regeneratorRuntime","async","_context","prev","next","awrap","findOne","sent","AdminEmail","redirect","status","t0","stop","adminController","students","instructor","_context2","find","console","log","courses","map","course","id","name","type","duration","price","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,kCACnBC,YAAcD,QAAQ,kCADtBD,QAAWC,QAAQ,iBAOnBE,mBAAqB,SAACC,EAAIC,GAA1BF,IAAAA,IAAAA,EACEC,EAAAE,KAAAC,EADFJ,EACEI,SAAAC,EADFL,EACEK,MAAAC,EADFN,EACEM,SAAAC,EADFP,EACEO,KAC0CN,SAD1CO,OAAA,CACOJ,SADPA,EACiBC,MADjBA,EACwBC,SADxBA,EAAAC,KAAAA,IAGIH,EAAAA,OAASA,KADgBK,KAAA,CAAAC,QAAA,8BAEzBL,MAAMA,GACNC,EAAAA,OAASA,KAHgBG,KAAA,CAAAC,QAAA,4BAAAC,MAAAA,MAM7BC,gBAAA,SAAAX,EAAAC,GAAA,IAAAW,EAAAR,EAAAC,EAAAC,EAAAO,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAL,EAEqBZ,EAAAE,KAAVE,EAFXQ,EAEWR,MAAKI,EAFhBI,EAEgBJ,SAAKF,EAFrBM,EAEqBN,KAFrBU,EAAAE,KAAA,EAAAJ,mBAAAK,MAE8BvB,SAAAwB,QAAT,CAAAhB,MAAAA,KAFrB,KAAA,GAE6BS,EAF7BG,EAAAK,MAE0DX,UAAAA,GAAAA,UAAAA,GAA1DV,EAAAsB,WAAAlB,EACHH,EAAAsB,SAAA,WAYWV,EAAUR,UAAYA,GAAqB,SAATC,GAR5CK,EAAAA,UAAkBP,EAAAH,EAAAsB,SAAA,UAAAtB,EAAAuB,OAAA,KAAAhB,KAAA,CAAAC,QAAA,mBAPhBO,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,MAAA,GAOgBf,EAAAuB,OAAA,KAAAhB,KAAA,CAAAC,QAAA,mBAPhB,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAUyCC,gBAHzB,SAAA3B,EAAAC,GAAA,IAAA2B,EAAAC,EAAA,OAAAf,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAY,EAAAZ,KAAA,EAAAJ,mBAAAK,MAsBGvB,SAASmC,KAAK,CAACzB,KAAK,UAtBvB,KAAA,EAAA,OAsBdsB,EAtBcE,EAAAT,KAAAW,QAAAC,IAAAL,GAAAE,EAAAZ,KAAA,EAAAJ,mBAAAK,MAAAvB,SAAAmC,KAAA,CAAAzB,KAAA,gBAAA,KAAA,EAGVO,EAHUiB,EAAAT,KAyBpBW,QAAQC,IAAIJ,GArBR5B,EAAAuB,OAAGX,KAAAA,KAAUR,CAAAA,KAAAA,EAAYA,WAAAA,IAJT,KAAA,EAAA,IAAA,MAAA,OAAAyB,EAAAJ,WAMZzB,eAAIsB,SAASvB,EAAbC,GAAIsB,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EACPW,QAHDC,IAAA,SAIKC,GACDpC,EAAAA,KAAAA,yBAAAA,OAGAoC,EAAAC,GAHArC,2BAAAA,OAIIwB,EAAOc,KAJXtC,2BAAAA,OAIsBS,EAAQ8B,KAJ9BvC,2BAAAA,OAIAoC,EAAAI,SAJAxC,2BAAAA,OAKHoC,EAAAK,MALGzC,+BAHIuB,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WANQmB,OAAAC,QAAA,CAAA5C,mBAAAA,mBAgBhBE,gBAAAA,gBACIQ,eAAAA","file":"Controllers.min.js","sourcesContent":["const regModel = require('../models/registrationModel.js')\r\nconst courseModel = require('../models/registrationModel.js')\r\nconst courses = require('../courses.js')\r\n\r\n\r\n\r\n\r\nconst registerController = (req,res,next)=>{\r\n    try {\r\n        const {username, email, password, role} = req.body\r\n        const user = regModel.create({\r\n            username:username,\r\n            email:email,\r\n            password:password,\r\n            role:role\r\n        })\r\n        res.status(201).json({message:\"user created successfully\"})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Error while creating user\",error})\r\n    }\r\n\r\n}\r\n\r\nconst loginController = async(req,res,next)=>{\r\n    try {\r\n        const {email, password,role} = req.body\r\n        const userExist = await regModel.findOne({email})\r\n        if(userExist.password == password && role === 'Admin'){\r\n            req.AdminEmail = email\r\n            res.redirect('/admin')\r\n        }\r\n        else if(userExist.password == password && role === 'User' ){\r\n            req.UserEmail = email\r\n            res.redirect('/user')\r\n        }\r\n        else{\r\n            res.status(404).json({message:\"User not found\"})\r\n        }\r\n    } catch (error) {\r\n        res.status(404).json({\r\n            message:\"user not found\"\r\n        })\r\n    }\r\n}\r\nconst adminController = async(req,res,next)=>{\r\n    const students = await regModel.find({role:\"User\"})\r\n    console.log(students)\r\n    const instructor = await regModel.find({role:\"Instructor\"})\r\n    console.log(instructor)\r\n    res.status(200).json({user:students, instructor})\r\n}\r\nconst userController = async(req,res,next)=>{\r\n    courses.map((course)=>{\r\n        res.send(\r\n            `<ul>\r\n            <li>${course.id}</li>\r\n            <li>${course.name}</li>\r\n            <li>${course.type}</li>\r\n            <li>${course.duration}</li>\r\n            <li>${course.price}</li>\r\n            </ul>`)\r\n    })\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    registerController,\r\n    loginController,\r\n    userController,\r\n}"]}