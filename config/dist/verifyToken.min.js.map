{"version":3,"sources":["verifyToken.js"],"names":["jwt","require","req","res","next","token","regeneratorRuntime","async","_context","prev","headers","authorization","split","abrupt","status","json","error","verify","process","env","SECRET_KEY","err","decoded","user","stop","module","exports","validate"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBAAdD,SAAa,SAACE,EAAAC,EAApBC,GAAmB,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAJ,MAAA,KAAA,EAAA,GAGTC,EAAQH,EAAIQ,QAAQC,eAAiBT,EAAIQ,QAAQC,cAAcC,MAAM,KAAK,GAHjE,CAAAJ,EAAAJ,KAAA,EAAA,MAAA,OAAAI,EAAAK,OAAA,SAEFV,EAAAW,OAAA,KAAAC,KAAA,CAAAC,MAAA,kBAFE,KAAA,EAEFhB,IAAAiB,OAAAZ,EAAAa,QAAAC,IAAAC,WAAA,SAAAC,EAAAC,GAAA,GAAAD,EAAA,OAAAlB,EAAAW,OAAA,KAAAC,KAAA,CAAAC,MAAA,iBASTd,EAAIqB,KAAOD,EATFlB,MAFE,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAAgB,WAEFC,OAAAC,QAAAC","file":"verifyToken.min.js","sourcesContent":["const jwt = require('jsonwebtoken')\r\n\r\nconst validate = async (req,res, next) =>{\r\n    const token = req.headers.authorization && req.headers.authorization.split(' ')[1];\r\n    if(!token){\r\n        return res.status(401).json ({error:\"Unauthorized\"})\r\n    }\r\n    jwt.verify(token, process.env.SECRET_KEY, (err,decoded)=>{\r\n        if(err){\r\n            return res.status(401).json({error:\"Unauthorized\"})\r\n        }\r\n        req.user = decoded;\r\n        next()\r\n    })\r\n}\r\nmodule.exports = validate"]}