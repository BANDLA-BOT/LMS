{"version":3,"sources":["admin.js"],"names":["router","require","Router","registerModel","req","_req$body","email","password","role","admin","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","console","log","res","json","message","stop","get","students","instructors","_context2","find","id","user","_context3","params","deleteOne","_id"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,WAAWC,kBACVD,QAAQ,kCAAzBE,uBAAAA,cAIPH,OAJOG,KAAAA,SAIe,SAAMC,EAJrBD,GAIe,IAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAT,EACYD,EAAIW,KAA3BT,EADWD,EACXC,MAAMC,EADKF,EACLE,SADL,WACcC,EADJH,EACIG,MADJ,OAAAI,EAAAE,KAAA,EAAAJ,mBAAAM,MAAAb,cAAAc,QAAA,CAAAT,KAAAA,EAAAF,MAAAA,EAAAC,SAAAA,KAAAK,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAAL,EAAAG,EAAAM,KAIdC,QAAQC,IAAIX,GAJEA,EAAAY,EAAAC,KAAA,CAAAC,QAAA,oBAAAd,GAAAY,EAAAC,KAAA,CACYlB,QADZ,sBAAAQ,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAO,EAAAC,KAAA,CAAAC,QAAA,wBAAAJ,QAAAC,IAAA,SAAA,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAY,YAAAxB,OAAAyB,IAAA,UAAA,SAAArB,EAAAiB,GAAA,IAAAK,EAAAC,EAAA,OAAAjB,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAd,KAAA,EAAAJ,mBAAAM,MAG4Bb,cAAA0B,KAAA,CAAArB,KAAA,aAH5B,KAAA,EAAA,OAG6BA,EAH7BoB,EAAAV,KAAAU,EAAAd,KAAA,EAAAJ,mBAAAM,MAG4Bb,cAAA0B,KAAA,CAAArB,KAAA,gBAH5B,KAAA,EAGuCF,EAHvCsB,EAAAV,KAGmDX,EAAAA,KAAAA,CAAAA,SAASA,EAAAA,YAAAA,IAH5D,KAAA,EAAA,IAAA,MAAA,OAAAqB,EAAAJ,YAsBtBxB,OAAM,OAAQ,kBAAmB,SAAMI,EAAIiB,GAAV,IAAAS,EAAAC,EAAA,OAAArB,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAtBXgB,EAAA1B,EAAA6B,OAAAH,GAGRrB,QAAAA,IAHQqB,GAsBWE,EAAAlB,KAAA,EAAAJ,mBAAAM,MAlBbP,cAAZyB,UAAA,CAAAC,IAAAL,KAkByB,KAAA,EAlBzBX,EAkByBa,EAAAd,KAI7BG,EAAIC,KAAK,CAACC,QAAQ,OAAQQ,KAAAA,IAJG,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAAR,YAhBrBH,OAAAA,QAAIC","file":"admin.min.js","sourcesContent":["const router = require('express').Router();\r\nconst {registerModel} = require('../models/registrationModel.js')\r\n\r\n\r\n\r\nrouter.post('/login', async(req,res,next)=>{\r\n    const {email,password,role} = req.body\r\n    if(role === 'admin'){\r\n        const admin = await registerModel.findOne({role:role,email:email,password:password})\r\n        console.log(admin)\r\n        if(admin){\r\n            res.json({message:\"Admin logged in\"})\r\n        }\r\n        else if(!admin){\r\n            res.json({message:\"Error while login\"})\r\n        }\r\n    }\r\n    else{\r\n        res.json({message:\"Error while log in \"})\r\n        console.log(\"error\")\r\n    }\r\n})\r\nrouter.get('/getall', async(req,res)=>{\r\n    const students = await registerModel.find({role:\"student\"})\r\n    const instructors = await registerModel.find({role:\"instructor\"})\r\n    res.json({students:students, instructors:instructors})\r\n})\r\nrouter.delete('/deleteuser/:id', async(req,res)=>{\r\n    const id = req.params.id\r\n    console.log(id)\r\n    const user = await registerModel.deleteOne({_id:id})\r\n    res.json({message:\"user\", user})\r\n})\r\nmodule.exports = router"]}