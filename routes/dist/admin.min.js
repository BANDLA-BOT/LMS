"use strict";var router=require("express").Router(),_require=require("../models/registrationModel.js"),registerModel=_require.registerModel,studentModel=_require.studentModel;router.post("/login",function(r,t){var n,s,o,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=r.body,s=n.email,o=n.password,a=n.role,e.next=4,regeneratorRuntime.awrap(registerModel.findOne({role:a,email:s,password:o}));case 4:(u=e.sent)||t.json({message:"No user found "}),t.json({message:"Admin logged in successfully",admin:u}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),t.json({error:e.t0.message,message:"Internal server error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])}),router.get("/getall",function(e,r){var t,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(studentModel.find());case 3:return t=e.sent,e.next=6,regeneratorRuntime.awrap(registerModel.find({role:"instructor"}));case 6:n=e.sent,t||r.json({message:"No Students found in DB"}),n||r.json({message:"No instructors found in DB"}),r.json({students:t,instructors:n}),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),r.status(500).json({message:"Internal server error"});case 15:case"end":return e.stop()}},null,null,[[0,12]])}),router.delete("/deleteuser/:id",function(r,t){var n,s,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=r.params.id,console.log(n),e.next=5,regeneratorRuntime.awrap(registerModel.deleteOne({_id:n}));case 5:return s=e.sent,e.next=8,regeneratorRuntime.awrap(studentModel.deleteOne({_id:n}));case 8:o=e.sent,t.json({message:"user",user:s,student:o}),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),t.status(500).json({message:"Internal server error"});case 15:case"end":return e.stop()}},null,null,[[0,12]])}),module.exports=router;
//# sourceMappingURL=admin.min.js.map
