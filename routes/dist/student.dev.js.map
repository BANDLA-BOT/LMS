{"version":3,"sources":["student.js"],"names":["router","require","Router","registerModel","courseModel","post","req","res","next","body","email","password","find","role","student","json","message","error","username","findById","params","_id","course","updateOne","$set","newData","console","log","get","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;eACqCD,OAAO,CAAC,gCAAD,C;IAArCE,a,YAAAA,a;IAAeC,W,YAAAA,W;;AAEtBJ,MAAM,CAACK,IAAP,CAAY,QAAZ,EAAsB,iBAAMC,GAAN,EAAUC,GAAV,EAAcC,IAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEWF,GAAG,CAACG,IAFf,EAEPC,KAFO,aAEPA,KAFO,EAEDC,QAFC,aAEDA,QAFC;AAAA;AAAA,0CAGQR,aAAa,CAACS,IAAd,CAAmB;AAACF,YAAAA,KAAK,EAACA,KAAP;AAAcC,YAAAA,QAAQ,EAACA,QAAvB;AAAiCE,YAAAA,IAAI,EAAC;AAAtC,WAAnB,CAHR;;AAAA;AAGRC,UAAAA,OAHQ;;AAId,cAAGA,OAAH,EAAW;AACPP,YAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,cAAAA,OAAO,EAAC,wBAAT;AAAkCF,cAAAA,OAAO,EAAPA;AAAlC,aAAT;AACH;;AANa;AAAA;;AAAA;AAAA;AAAA;AAQdP,UAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAC,mBAAT;AAA8BC,YAAAA,KAAK;AAAnC,WAAT;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAWAjB,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA4B,kBAAOC,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACMD,GAAG,CAACG,IADV,EACbC,KADa,cACbA,KADa,EACNQ,QADM,cACNA,QADM;AAAA;AAAA,0CAECd,WAAW,CAACe,QAAZ,CAAqBb,GAAG,CAACc,MAAJ,CAAWC,GAAhC,CAFD;;AAAA;AAEdC,UAAAA,MAFc;AAAA;AAAA,0CAGEnB,aAAa,CAACoB,SAAd,CAAwB;AAACb,YAAAA,KAAK,EAACA;AAAP,WAAxB,EAAsC;AAACc,YAAAA,IAAI,EAAC;AAACF,cAAAA,MAAM,EAACA,MAAM,CAACD;AAAf;AAAN,WAAtC,CAHF;;AAAA;AAGdI,UAAAA,OAHc;AAIpBlB,UAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAC,SAAT;AAAoBS,YAAAA,OAAO,EAAPA;AAApB,WAAT;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAOAtB,MAAM,CAAC4B,GAAP,CAAW,UAAX,EAAsB,kBAAMtB,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACOH,WAAW,CAACQ,IAAZ,EADP;;AAAA;AACRU,UAAAA,MADQ;AAEdf,UAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAC,SAAT;AAAoBM,YAAAA,MAAM,EAANA;AAApB,WAAT;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAKAO,MAAM,CAACC,OAAP,GAAiB9B,MAAjB","sourcesContent":["const router = require('express').Router();\r\nconst {registerModel, courseModel} = require('../models/registrationModel.js')\r\n\r\nrouter.post('/login', async(req,res,next)=>{\r\n    try {\r\n        const {email,password} = req.body\r\n        const student = await registerModel.find({email:email, password:password, role:\"student\"})\r\n        if(student){\r\n            res.json({message:\"logged in successfully\",student})\r\n        }\r\n    } catch (error) {\r\n        res.json({message:\"Error while login\", error})\r\n    }\r\n})\r\nrouter.post('/course/:_id', async (req,res)=>{  \r\n        const {email, username} = req.body\r\n        const course = await courseModel.findById(req.params._id)\r\n        const newData = await registerModel.updateOne({email:email},{$set:{course:course._id}})\r\n        res.json({message:\"success\", newData})\r\n        console.log(course)\r\n})\r\nrouter.get('/profile',async(req,res)=>{\r\n        const course = await courseModel.find()\r\n        res.json({message:\"fetched\", course})\r\n})\r\n\r\nmodule.exports = router"],"file":"student.dev.js"}