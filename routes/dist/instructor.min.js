"use strict";var express=require("express"),_require=require("../models/registrationModel.js"),registerModel=_require.registerModel,_require2=require("../models/registrationModel.js"),courseModel=_require2.courseModel,mongoose=require("mongoose"),router=express.Router();router.post("/login",function(r,s){var o,t,n,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return o=r.body,t=o.email,n=o.password,e.next=3,regeneratorRuntime.awrap(registerModel.findOne({email:t,password:n,role:"instructor"}));case 3:u=e.sent,console.log(u),u?s.json({message:"Instructor logged in",instructor:u}):u||s.json({message:"failed login"});case 6:case"end":return e.stop()}})}),router.post("/create",function(r,s){var o,t,n,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return o=r.body,t=o.coursename,n=o.coursetype,u=o.courseduration,e.next=3,regeneratorRuntime.awrap(courseModel.create({coursename:t,coursetype:n,courseduration:u}).then(function(e){s.json({message:"Course created successfully",course:e})}).catch(function(e){console.log(e)}));case 3:e.sent;case 4:case"end":return e.stop()}})}),router.get("/allCourses",function(e,r){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(courseModel.find());case 2:s=e.sent,r.json({message:"All the courses available in the DATABASE",courses:s});case 4:case"end":return e.stop()}})}),module.exports=router;
//# sourceMappingURL=instructor.min.js.map
