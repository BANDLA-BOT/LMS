{"version":3,"sources":["student.js"],"names":["router","require","Router","registerModel","courseModel","post","req","res","_req$body","email","password","student","regeneratorRuntime","async","_context","prev","next","awrap","find","role","sent","json","message","t0","error","stop","_req$body2","course","newData","_context2","body","username","findById","updateOne","$set","_id","_context3","module","exports"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,WAAWC,kBACGD,QAAQ,kCAAtCE,uBAAAA,cAAeC,qBAAAA,YAEtBJ,OAAOK,KAAK,SAAU,SAAMC,EAAIC,GAAV,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAP,EAFfL,EAAAA,KAAAA,EAEeK,EAFfL,MAIcO,EAFCF,EAEDE,SAFCI,EAAAE,KAAA,EAAAJ,mBAAAK,MAFAb,cAKsBc,KAAK,CAACT,MAAMA,EAAOC,SAASA,EAAUS,KAAK,aAHjE,KAAA,GAFAf,EAEAU,EAAAM,OAAVb,EAAAc,KAAZ,CAAsBC,QAAA,yBAAAX,QAAAA,IAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,MAAA,GAAAP,EAAAc,KAAA,CAAAC,QAAA,oBAAAE,MAAAV,EAAAS,KAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAW,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAzB,OAAAK,KAAA,eAAA,SAAAC,EAAAC,GAAA,IAAAmB,EAAAjB,EAAAkB,EAAAC,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAU,EAAApB,EAAAwB,KAAArB,EAAAiB,EAAAjB,MAAAiB,EAAAK,SAAAF,EAAAb,KAAA,EAAAJ,mBAAAK,MAEea,YAFfE,SAEPvB,EAAAA,OAAMC,MAFC,KAAA,EAAA,OAAAiB,EAAAE,EAAAT,KAAAS,EAAAb,KAAA,EAAAJ,mBAAAK,MAAAd,cAAA8B,UAAA,CAAAxB,MAAAA,GAAA,CAAAyB,KAAA,CAAAP,OAAAA,EAAAQ,QAAA,KAAA,EAAAP,EAAAC,EAAAT,KAAAb,EAAAc,KAAA,CAAAC,QAAA,UAAAM,QAAAA,IAG4BnB,QAAAA,IAAMA,GAHlC,KAAA,EAAA,IAAA,MAAA,OAAAoB,EAAAJ,YAG4DN,OAAAA,IAAAA,WAAK,SAAAb,EAAAC,GAAA,IAAAoB,EAAA,OAAAf,mBAAAC,MAAA,SAAAuB,GAAA,OAAA,OAAAA,EAAArB,KAAAqB,EAAApB,MAAA,KAAA,EAAA,OAAAoB,EAAApB,KAAA,EAAAJ,mBAAAK,MAHjEb,YAAAc,QAGiE,KAAA,EAHjES,EAGiES,EAAAhB,KAiB/Eb,EAAIc,KAAK,CAACC,QAAQ,UAAWK,OAAAA,IAjBkD,KAAA,EAAA,IAAA,MAAA,OAAAS,EAAAX,YAoBvFY,OAAOC,QAAUtC","file":"student.min.js","sourcesContent":["const router = require('express').Router();\r\nconst {registerModel, courseModel} = require('../models/registrationModel.js')\r\n\r\nrouter.post('/login', async(req,res,next)=>{\r\n    try {\r\n        const {email,password} = req.body\r\n        const student = await registerModel.find({email:email, password:password, role:\"student\"})\r\n        if(student){\r\n            res.json({message:\"logged in successfully\",student})\r\n        }\r\n    } catch (error) {\r\n        res.json({message:\"Error while login\", error})\r\n    }\r\n})\r\nrouter.post('/course/:_id', async (req,res)=>{  \r\n        const {email, username} = req.body\r\n        const course = await courseModel.findById(req.params._id)\r\n        const newData = await registerModel.updateOne({email:email},{$set:{course:course._id}})\r\n        res.json({message:\"success\", newData})\r\n        console.log(course)\r\n})\r\nrouter.get('/profile',async(req,res)=>{\r\n        const course = await courseModel.find()\r\n        res.json({message:\"fetched\", course})\r\n})\r\n\r\nmodule.exports = router"]}