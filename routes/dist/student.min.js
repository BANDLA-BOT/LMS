"use strict";function _defineProperty(e,r,s){return r in e?Object.defineProperty(e,r,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[r]=s,e}var router=require("express").Router(),validate=require("../config/verifyToken.js"),jwt=require("jsonwebtoken"),_require=require("../models/registrationModel.js"),registerModel=_require.registerModel,courseModel=_require.courseModel,studentModel=_require.studentModel;router.post("/register",function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.username,a=t.email,u=t.password,o=new studentModel({username:n,password:u,email:a}),e.next=5,regeneratorRuntime.awrap(o.save());case 5:s.json({message:"Student registered successfully ",StudenDetails:o}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),s.json({error:e.t0.message});case 11:case"end":return e.stop()}},null,null,[[0,8]])}),router.post("/login",function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.email,a=t.password,e.next=4,regeneratorRuntime.awrap(studentModel.findOne({email:n,password:a}));case 4:(u=e.sent)?(o=jwt.sign({user:{username:u.username,email:u.email,password:u.password,id:u._id,profile:u.profile}},process.env.SECRET_KEY,{expiresIn:"1h"}),s.json({message:"Student logged in successfully",student:u,token:o})):u||s.json({message:"No student found"}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),s.json({message:"Error while login",error:e.t0});case 11:case"end":return e.stop()}},null,null,[[0,8]])}),router.post("/purchase/:courseId/:studentId",validate,function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.params,n=t.courseId,a=t.studentId,e.next=4,regeneratorRuntime.awrap(studentModel.findById(a));case 4:return u=e.sent,e.next=7,regeneratorRuntime.awrap(courseModel.findById(n));case 7:if(o=e.sent,console.log(o),u&&o){e.next=11;break}return e.abrupt("return",s.status(400).json({message:"User/Course not found "}));case 11:return u.purchases.push(o),e.next=14,regeneratorRuntime.awrap(u.save());case 14:s.status(200).json({message:"Course added to user ",student:u}),e.next=20;break;case 17:e.prev=17,e.t0=e.catch(0),s.status(500).json({message:"Internal server error",err:e.t0.message});case 20:case"end":return e.stop()}},null,null,[[0,17]])}),router.get("/purchases/:studentId",function(r,s){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(studentModel.findById(r.params.studentId,"purchases"));case 3:(t=e.sent)||s.json({message:"No courses in the purchased list"}),s.json({message:"Your Purchases are",course:t}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),s.status(500).json({message:"Internal server error "});case 11:case"end":return e.stop()}},null,null,[[0,8]])}),router.get("/profile",validate,function(r,s){var t,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.user,console.log(t),e.next=4,regeneratorRuntime.awrap(courseModel.find());case 4:n=e.sent,s.json({message:"Courses available are",studentName:t.user.username,studentMail:t.user.email,courses:n});case 6:case"end":return e.stop()}})}),router.get("/categories",validate,function(r,s){var t,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.user,console.log(t),e.next=4,regeneratorRuntime.awrap(courseModel.find({coursetype:"free"}));case 4:return n=e.sent,e.next=7,regeneratorRuntime.awrap(courseModel.find({coursetype:"paid"}));case 7:a=e.sent,s.json({message:"fetched",user:t,FreeCourses:n,PaidCourses:a});case 9:case"end":return e.stop()}})}),router.put("/update/:id",function(r,s){var t,n,a,u,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body,n=t.email,a=t.password,u=t.username,o=r.params.id,e.next=4,regeneratorRuntime.awrap(studentModel.updateOne({_id:o},{$set:{email:n,password:a,username:u}}));case 4:c=e.sent,s.json({message:"updated successfully",user:c});case 6:case"end":return e.stop()}})}),router.get("/search/filter",function(r,s){var t,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.query.q,e.next=4,regeneratorRuntime.awrap(courseModel.find({$or:[{coursename:{$regex:t,$options:"i"}},{coursetype:{$regex:t,$options:"i"}}]}));case 4:return n=e.sent,e.next=7,regeneratorRuntime.awrap(registerModel.find({$or:[{username:{$regex:t,$options:"i"}}]}));case 7:a=e.sent,s.json({message:"found results",Courses:n,instructor:a}),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),s.status(500).json({message:"Error While searching",error:e.t0});case 14:case"end":return e.stop()}},null,null,[[0,11]])}),router.post("/wishlist/:courseId/:studentId",validate,function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.params,n=t.courseId,a=t.studentId,e.next=4,regeneratorRuntime.awrap(studentModel.findById({_id:a}));case 4:return u=e.sent,e.next=7,regeneratorRuntime.awrap(courseModel.findById({_id:n}));case 7:return o=e.sent,console.log(u,o),u.wishlist.push(o),e.next=12,regeneratorRuntime.awrap(u.save());case 12:s.json({message:"wishlist created ",student:u}),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),s.json(_defineProperty({error:e.t0.message},"error","Error occured while creating wishlist"));case 18:case"end":return e.stop()}},null,null,[[0,15]])}),router.get("/getwishlist",validate,function(r,s){var t,n,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.user.user,n=t.email,a=t.password,e.next=3,regeneratorRuntime.awrap(studentModel.find({email:n,password:a},"wishlist"));case 3:u=e.sent,console.log(u);try{u||s.json({message:"There are no courses in your wishlist"}),s.json({message:"Wishlist found",list:u})}catch(e){s.status(500).json({message:"Internal server error"})}case 6:case"end":return e.stop()}})}),router.put("/certification/:courseId/:completed",validate,function(r,s){var t,n,a,u,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.params,n=t.courseId,a=t.completed,u=r.user,o=u.user,o.email,o.password,e.prev=3,e.next=6,regeneratorRuntime.awrap(studentModel.findOneAndUpdate({email:u.user.email,password:u.user.password,"purchases._id":n},{$set:{"purchases.$.completed":a}},{new:!0}));case 6:if(c=e.sent){e.next=9;break}return e.abrupt("return",s.status(404).json({message:"Student or course not found"}));case 9:s.json(c),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(3),s.status(500).json({message:e.t0.message});case 15:case"end":return e.stop()}},null,null,[[3,12]])}),router.get("/getcertificate/:studentId",validate,function(r,s){var t,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(studentModel.findById({_id:r.params.studentId}));case 3:if(t=e.sent){e.next=6;break}return e.abrupt("return",s.status(404).json({message:"Student not found"}));case 6:n=t.purchases.filter(function(e){return e.completed}),s.json({message:"Courses Completed are",courses:n}),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),s.status(500).json({message:"Error fetching",error:e.t0});case 13:case"end":return e.stop()}},null,null,[[0,10]])}),module.exports=router;
//# sourceMappingURL=student.min.js.map
