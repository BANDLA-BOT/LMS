{"version":3,"sources":["registrationModel.js"],"names":["mongoose","require","Schema","coursename","String","courseDetails","coursetype","Date","default","now","register","username","type","required","email","lowercase","password","role","profile","timestamps","wishlist","courseduration","courseName","courseDuration","courseType","Boolean","student","completed","courseDetailsSchema","studentModel","model","purchases","module","courseModel"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,cAAkB,IAACA,SAEUE,OAC/B,CACEC,WAAYC,OAFZC,WAAaD,OAEbD,eADFC,OAEEE,UAAYF,CAAAA,KAFdG,KAAAC,QAAAD,KAAAE,SAWEC,SAAW,IAAIV,SAASE,OAA9B,CAEIS,SAAU,CACRC,KAAMR,OACNS,UAAU,GAEZC,MAAO,CACLF,KAAMR,OACNS,UAAU,EACVE,WAAW,GAEbC,SAAU,CACRJ,KAAMR,OACNS,UAAU,GAEZI,KAAM,CACJL,KAAMR,OACNS,UAAU,EACVE,WAAW,GAEbG,QAAS,CACPN,KAAMR,SAGRe,CAAAA,YAAY,IAITC,SAD0BpB,SAAAE,OAAA,CAE7BC,KAAAA,EACAkB,WAAAA,OACAf,eAAWF,OAJfE,WAAAF,SAOEkB,oBAAY,IAAAtB,SAAAE,OAAA,CAAEU,WAAMR,CAARQ,KAAAR,OAAAS,UAAA,GAAgBA,WAAU,CAAAD,KAAAR,OAAAS,UAAA,GAA1BU,eADkC,CAAAX,KAAAR,OAAAS,UAAA,GAE9CW,UAAU,CAAEZ,KAAAa,QAAAjB,SAAA,KAFkCkB,QAAA,IAAA1B,SAAAE,OAAA,CAG9CqB,SAAAA,CAAkBX,KAAMR,OAAQS,UAAU,GAC1Cc,MAAAA,CAAaf,KAAMa,OAASZ,UAAS,GAJvCG,SAAA,CAOMU,KAAOtB,OACTO,UAAS,GAEPE,QAAQ,CAHsBD,KAAAR,QAO9BS,UAAS,CAAAe,qBAPqBR,SAAA,CAAAA,YAAAS,aAAA7B,SAAA8B,MAAA,UAAAJ,SAiBhCK,cAAWH,SAAAA,MAjBqB,OAAAlB,UAkBhCU,YAAUA,SAADU,MAAA,SAAAzB,eAOb2B,OAAMH,QAAY,CAAG7B,cAAAA,cAAeiC,YAAAA,YAAWP,aAAAA","file":"registrationModel.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\n//courseModel\r\nconst courseDetails = new mongoose.Schema(\r\n    {\r\n      coursename: String,\r\n      coursetype: String,\r\n      courseduration: String,\r\n      createdAt:{type:Date, default:Date.now()}\r\n    },\r\n    \r\n  );\r\n\r\n//registerModel\r\n\r\nconst register = new mongoose.Schema(\r\n  {\r\n    username: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      lowercase: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    role: {\r\n      type: String,\r\n      required: true,\r\n      lowercase: true,\r\n    },\r\n    profile: {\r\n      type: String,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst wishlist = mongoose.Schema({\r\n    _id:false,\r\n    coursename:String,\r\n    courseduration:String,\r\n    coursetype:String,\r\n});\r\nconst courseDetailsSchema = new mongoose.Schema({\r\n  courseName: { type: String, required: true },\r\n  courseType: { type: String, required: true },\r\n  courseDuration: { type: String, required: true },\r\n  completed: { type: Boolean, default: false }\r\n});\r\n\r\nconst student = new mongoose.Schema({\r\n    username:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    email:{\r\n      type:String,\r\n      required:true,\r\n    },\r\n    password:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    profile:{\r\n      type:String\r\n    },\r\n\r\n    purchases:[courseDetailsSchema],\r\n    wishlist:[wishlist]\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst studentModel = mongoose.model('student', student)\r\nconst registerModel = mongoose.model(\"user\", register);\r\nconst courseModel = mongoose.model(\"course\", courseDetails);\r\n\r\nmodule.exports = { registerModel, courseModel,studentModel};\r\n"]}