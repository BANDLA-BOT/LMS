{"version":3,"sources":["registrationModel.js"],"names":["mongoose","require","courseDetails","Schema","coursename","String","coursetype","courseduration","timestamps","register","username","type","required","email","lowercase","password","role","profile","purchases","course","completed","Boolean","wishlist","list","studentEmail","studentUsername","studentId","wishlistModel","model","registerModel","courseModel","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CACA;;;AACA,IAAMC,aAAa,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAClB;AACEC,EAAAA,UAAU,EAAEC,MADd;AAEEC,EAAAA,UAAU,EAAED,MAFd;AAGEE,EAAAA,cAAc,EAAEF;AAHlB,CADkB,EAMlB;AAAEG,EAAAA,UAAU,EAAE;AAAd,CANkB,CAAtB,C,CASA;;AAEA,IAAMC,QAAQ,GAAG,IAAIT,QAAQ,CAACG,MAAb,CACf;AACEO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEN,MADE;AAERO,IAAAA,QAAQ,EAAE;AAFF,GADZ;AAKEC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAEN,MADD;AAELO,IAAAA,QAAQ,EAAE,IAFL;AAGLE,IAAAA,SAAS,EAAE;AAHN,GALT;AAUEC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEN,MADE;AAERO,IAAAA,QAAQ,EAAE;AAFF,GAVZ;AAcEI,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAEN,MADF;AAEJO,IAAAA,QAAQ,EAAE,IAFN;AAGJE,IAAAA,SAAS,EAAE;AAHP,GAdR;AAmBEG,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAEN;AADC,GAnBX;AAsBEa,EAAAA,SAAS,EAAE,CACP;AAACC,IAAAA,MAAM,EAAC,CAACjB,aAAD;AAAR,GADO,EAEP;AAACkB,IAAAA,SAAS,EAAC;AACPT,MAAAA,IAAI,EAACU,OADE;AAEP,iBAAQ;AAFD;AAAX,GAFO;AAtBb,CADe,EA+Bf;AAAEb,EAAAA,UAAU,EAAE;AAAd,CA/Be,CAAjB,C,CAoCA;;AACA,IAAMc,QAAQ,GAAGtB,QAAQ,CAACG,MAAT,CAAgB;AAC/BoB,EAAAA,IAAI,EAAE,CAACrB,aAAD,CADyB;AAE/BsB,EAAAA,YAAY,EAAC;AACXb,IAAAA,IAAI,EAACN;AADM,GAFkB;AAK/BoB,EAAAA,eAAe,EAAC;AACdd,IAAAA,IAAI,EAACN;AADS,GALe;AAQ/BqB,EAAAA,SAAS,EAAC;AACRf,IAAAA,IAAI,EAACN;AADG;AARqB,CAAhB,CAAjB;AAYA,IAAMsB,aAAa,GAAG3B,QAAQ,CAAC4B,KAAT,CAAe,UAAf,EAA2BN,QAA3B,CAAtB;AACA,IAAMO,aAAa,GAAG7B,QAAQ,CAAC4B,KAAT,CAAe,MAAf,EAAuBnB,QAAvB,CAAtB;AACA,IAAMqB,WAAW,GAAG9B,QAAQ,CAAC4B,KAAT,CAAe,QAAf,EAAyB1B,aAAzB,CAApB;AAEA6B,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,aAAa,EAAbA,aAAF;AAAiBC,EAAAA,WAAW,EAAXA,WAAjB;AAA8BH,EAAAA,aAAa,EAAbA;AAA9B,CAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\r\n//courseModel\r\nconst courseDetails = new mongoose.Schema(\r\n    {\r\n      coursename: String,\r\n      coursetype: String,\r\n      courseduration: String,\r\n    },\r\n    { timestamps: true }\r\n  );\r\n\r\n//registerModel\r\n\r\nconst register = new mongoose.Schema(\r\n  {\r\n    username: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      lowercase: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    role: {\r\n      type: String,\r\n      required: true,\r\n      lowercase: true,\r\n    },\r\n    profile: {\r\n      type: String,\r\n    },\r\n    purchases: [\r\n        {course:[courseDetails]},\r\n        {completed:{\r\n            type:Boolean,\r\n            default:false\r\n        }}\r\n    ],\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n\r\n\r\n//wishlistModel\r\nconst wishlist = mongoose.Schema({\r\n  list: [courseDetails],\r\n  studentEmail:{\r\n    type:String,\r\n  },\r\n  studentUsername:{\r\n    type:String\r\n  },\r\n  studentId:{\r\n    type:String\r\n  }\r\n});\r\nconst wishlistModel = mongoose.model(\"wishlist\", wishlist);\r\nconst registerModel = mongoose.model(\"user\", register);\r\nconst courseModel = mongoose.model(\"course\", courseDetails);\r\n\r\nmodule.exports = { registerModel, courseModel, wishlistModel };\r\n"],"file":"registrationModel.dev.js"}