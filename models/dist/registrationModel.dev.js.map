{"version":3,"sources":["registrationModel.js"],"names":["mongoose","require","courseDetails","Schema","coursename","String","coursetype","courseduration","createdAt","type","Date","now","register","username","required","email","lowercase","password","role","profile","timestamps","wishlist","_id","courseDetailsSchema","courseName","courseType","courseDuration","completed","Boolean","student","purchases","studentModel","model","registerModel","courseModel","module","exports"],"mappings":"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","sourcesContent":["const mongoose = require(\"mongoose\");\r\n//courseModel\r\nconst courseDetails = new mongoose.Schema(\r\n    {\r\n      coursename: String,\r\n      coursetype: String,\r\n      courseduration: String,\r\n      createdAt:{type:Date, default:Date.now()}\r\n    },\r\n    \r\n  );\r\n\r\n//registerModel\r\n\r\nconst register = new mongoose.Schema(\r\n  {\r\n    username: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      lowercase: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    role: {\r\n      type: String,\r\n      required: true,\r\n      lowercase: true,\r\n    },\r\n    profile: {\r\n      type: String,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst wishlist = mongoose.Schema({\r\n    _id:false,\r\n    coursename:String,\r\n    courseduration:String,\r\n    coursetype:String,\r\n});\r\nconst courseDetailsSchema = new mongoose.Schema({\r\n  courseName: { type: String, required: true },\r\n  courseType: { type: String, required: true },\r\n  courseDuration: { type: String, required: true },\r\n  completed: { type: Boolean, default: false }\r\n});\r\n\r\nconst student = new mongoose.Schema({\r\n    username:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    email:{\r\n      type:String,\r\n      required:true,\r\n    },\r\n    password:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    profile:{\r\n      type:String\r\n    },\r\n\r\n    purchases:[courseDetailsSchema],\r\n    wishlist:[wishlist]\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst studentModel = mongoose.model('student', student)\r\nconst registerModel = mongoose.model(\"user\", register);\r\nconst courseModel = mongoose.model(\"course\", courseDetails);\r\n\r\nmodule.exports = { registerModel, courseModel,studentModel};\r\n"],"file":"registrationModel.dev.js"}